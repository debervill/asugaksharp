// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using asugaksharp.Model;

#nullable disable

namespace asugaksharp.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250609064125_add link kaf periodZased")]
    partial class addlinkkafperiodZased
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.5");

            modelBuilder.Entity("GakPerson", b =>
                {
                    b.Property<Guid>("GaksId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("PersonsId")
                        .HasColumnType("TEXT");

                    b.HasKey("GaksId", "PersonsId");

                    b.HasIndex("PersonsId");

                    b.ToTable("GakPerson");
                });

            modelBuilder.Entity("PersonZasedanie", b =>
                {
                    b.Property<Guid>("PersonsId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ZasedaniesId")
                        .HasColumnType("TEXT");

                    b.HasKey("PersonsId", "ZasedaniesId");

                    b.HasIndex("ZasedaniesId");

                    b.ToTable("PersonZasedanie");
                });

            modelBuilder.Entity("asugaksharp.Model.Diplomnik", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("FioImen")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("FioRodit")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<float>("OrigVkr")
                        .HasColumnType("REAL");

                    b.Property<int>("Pages")
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("PersonId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Sex")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<float>("Srball")
                        .HasColumnType("REAL");

                    b.Property<string>("Tema")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("PersonId");

                    b.ToTable("Diplomnik");
                });

            modelBuilder.Entity("asugaksharp.Model.Docs", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Data")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsUploaded")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("PersonId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("PersonId");

                    b.ToTable("Docs");
                });

            modelBuilder.Entity("asugaksharp.Model.Gak", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("KafedraID")
                        .HasColumnType("TEXT");

                    b.Property<int>("KolvoBudget")
                        .HasColumnType("INTEGER");

                    b.Property<int>("KolvoPlatka")
                        .HasColumnType("INTEGER");

                    b.Property<string>("NomerPrikaza")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("PeriodZasedaniaId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("KafedraID");

                    b.HasIndex("PeriodZasedaniaId");

                    b.ToTable("Gak");
                });

            modelBuilder.Entity("asugaksharp.Model.Kafedra", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Kafedra");
                });

            modelBuilder.Entity("asugaksharp.Model.NapravleniePodgotovki", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Nazvanie")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ShifrNapr")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("NapravleniePodgotovki");
                });

            modelBuilder.Entity("asugaksharp.Model.Oplata", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<int>("DogovorNumber")
                        .HasColumnType("INTEGER");

                    b.Property<float>("Enp")
                        .HasColumnType("REAL");

                    b.Property<int>("MoneySource")
                        .HasColumnType("INTEGER");

                    b.Property<float>("Ndfl")
                        .HasColumnType("REAL");

                    b.Property<Guid>("PersonId")
                        .HasColumnType("TEXT");

                    b.Property<float>("Stavka")
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.HasIndex("PersonId");

                    b.ToTable("Oplata");
                });

            modelBuilder.Entity("asugaksharp.Model.PeriodZasedania", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateOnly>("DateEnd")
                        .HasColumnType("TEXT");

                    b.Property<DateOnly>("DateStart")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("KafedraId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Primechanie")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("KafedraId");

                    b.ToTable("PeriodZasedania");
                });

            modelBuilder.Entity("asugaksharp.Model.Person", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Dolgnost")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsPredsed")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsRecenzent")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsSecretar")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsVneshniy")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsZavKaf")
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("KafedraID")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Stepen")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Zvanie")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("KafedraID");

                    b.ToTable("Person");
                });

            modelBuilder.Entity("asugaksharp.Model.ProfilPodgotovki", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("NapravleniePodgotovkiID")
                        .HasColumnType("TEXT");

                    b.Property<string>("ShifrPodgot")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("NapravleniePodgotovkiID");

                    b.ToTable("ProfilPodgotovki");
                });

            modelBuilder.Entity("asugaksharp.Model.Zasedanie", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateOnly>("Date")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("GakID")
                        .HasColumnType("TEXT");

                    b.Property<string>("Kvalificacia")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("NapravleniePodgotovki")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("GakID");

                    b.ToTable("Zasedanie");
                });

            modelBuilder.Entity("GakPerson", b =>
                {
                    b.HasOne("asugaksharp.Model.Gak", null)
                        .WithMany()
                        .HasForeignKey("GaksId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("asugaksharp.Model.Person", null)
                        .WithMany()
                        .HasForeignKey("PersonsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PersonZasedanie", b =>
                {
                    b.HasOne("asugaksharp.Model.Person", null)
                        .WithMany()
                        .HasForeignKey("PersonsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("asugaksharp.Model.Zasedanie", null)
                        .WithMany()
                        .HasForeignKey("ZasedaniesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("asugaksharp.Model.Diplomnik", b =>
                {
                    b.HasOne("asugaksharp.Model.Person", "Person")
                        .WithMany("Diplomniks")
                        .HasForeignKey("PersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Person");
                });

            modelBuilder.Entity("asugaksharp.Model.Docs", b =>
                {
                    b.HasOne("asugaksharp.Model.Person", "Person")
                        .WithMany("Docs")
                        .HasForeignKey("PersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Person");
                });

            modelBuilder.Entity("asugaksharp.Model.Gak", b =>
                {
                    b.HasOne("asugaksharp.Model.Kafedra", "Kafedra")
                        .WithMany("Gaks")
                        .HasForeignKey("KafedraID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("asugaksharp.Model.PeriodZasedania", "PeriodZasedania")
                        .WithMany("Gaks")
                        .HasForeignKey("PeriodZasedaniaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Kafedra");

                    b.Navigation("PeriodZasedania");
                });

            modelBuilder.Entity("asugaksharp.Model.Oplata", b =>
                {
                    b.HasOne("asugaksharp.Model.Person", "Person")
                        .WithMany("Oplatas")
                        .HasForeignKey("PersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Person");
                });

            modelBuilder.Entity("asugaksharp.Model.PeriodZasedania", b =>
                {
                    b.HasOne("asugaksharp.Model.Kafedra", "Kafedra")
                        .WithMany("Periods")
                        .HasForeignKey("KafedraId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Kafedra");
                });

            modelBuilder.Entity("asugaksharp.Model.Person", b =>
                {
                    b.HasOne("asugaksharp.Model.Kafedra", "Kafedra")
                        .WithMany("Persons")
                        .HasForeignKey("KafedraID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Kafedra");
                });

            modelBuilder.Entity("asugaksharp.Model.ProfilPodgotovki", b =>
                {
                    b.HasOne("asugaksharp.Model.NapravleniePodgotovki", "NapravleniePodgotovki")
                        .WithMany("ProfilPodgotovkis")
                        .HasForeignKey("NapravleniePodgotovkiID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("NapravleniePodgotovki");
                });

            modelBuilder.Entity("asugaksharp.Model.Zasedanie", b =>
                {
                    b.HasOne("asugaksharp.Model.Gak", "Gak")
                        .WithMany("Zasedanies")
                        .HasForeignKey("GakID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Gak");
                });

            modelBuilder.Entity("asugaksharp.Model.Gak", b =>
                {
                    b.Navigation("Zasedanies");
                });

            modelBuilder.Entity("asugaksharp.Model.Kafedra", b =>
                {
                    b.Navigation("Gaks");

                    b.Navigation("Periods");

                    b.Navigation("Persons");
                });

            modelBuilder.Entity("asugaksharp.Model.NapravleniePodgotovki", b =>
                {
                    b.Navigation("ProfilPodgotovkis");
                });

            modelBuilder.Entity("asugaksharp.Model.PeriodZasedania", b =>
                {
                    b.Navigation("Gaks");
                });

            modelBuilder.Entity("asugaksharp.Model.Person", b =>
                {
                    b.Navigation("Diplomniks");

                    b.Navigation("Docs");

                    b.Navigation("Oplatas");
                });
#pragma warning restore 612, 618
        }
    }
}
